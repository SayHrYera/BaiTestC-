// <auto-generated />
using System;
using App_Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App_Data.Migrations
{
    [DbContext(typeof(exam_distribution_testContext))]
    partial class exam_distribution_testContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("App_Data.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("created_date");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("department", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.DepartmentFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("created_date");

                    b.Property<Guid?>("IdDepartment")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_department");

                    b.Property<Guid?>("IdFacility")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_facility");

                    b.Property<Guid?>("IdStaff")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_staff");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_date");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("IdFacility");

                    b.HasIndex("IdStaff");

                    b.ToTable("department_facility", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.Facility", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("created_date");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("facility", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.ImportHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ErrorDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FailedRecords")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SuccessfulRecords")
                        .HasColumnType("int");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ImportHistories");
                });

            modelBuilder.Entity("App_Data.Models.Major", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("created_date");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("major", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.MajorFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("created_date");

                    b.Property<Guid?>("IdDepartmentFacility")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_department_facility");

                    b.Property<Guid?>("IdMajor")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_major");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_date");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartmentFacility");

                    b.HasIndex("IdMajor");

                    b.ToTable("major_facility", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.staff", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("AccountFe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("account_fe");

                    b.Property<string>("AccountFpt")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("account_fpt");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("created_date");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("StaffCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("staff_code");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("staff");
                });

            modelBuilder.Entity("App_Data.Models.StaffMajorFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<long?>("CreatedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("created_date");

                    b.Property<Guid?>("IdMajorFacility")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_major_facility");

                    b.Property<Guid?>("IdStaff")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_staff");

                    b.Property<long?>("LastModifiedDate")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_date");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("IdMajorFacility");

                    b.HasIndex("IdStaff");

                    b.ToTable("staff_major_facility", (string)null);
                });

            modelBuilder.Entity("App_Data.Models.DepartmentFacility", b =>
                {
                    b.HasOne("App_Data.Models.Department", "IdDepartmentNavigation")
                        .WithMany("DepartmentFacilities")
                        .HasForeignKey("IdDepartment")
                        .HasConstraintName("FK__departmen__id_de__3D5E1FD2");

                    b.HasOne("App_Data.Models.Facility", "IdFacilityNavigation")
                        .WithMany("DepartmentFacilities")
                        .HasForeignKey("IdFacility")
                        .HasConstraintName("FK__departmen__id_fa__3E52440B");

                    b.HasOne("App_Data.Models.staff", "IdStaffNavigation")
                        .WithMany("DepartmentFacilities")
                        .HasForeignKey("IdStaff")
                        .HasConstraintName("FK__departmen__id_st__3F466844");

                    b.Navigation("IdDepartmentNavigation");

                    b.Navigation("IdFacilityNavigation");

                    b.Navigation("IdStaffNavigation");
                });

            modelBuilder.Entity("App_Data.Models.MajorFacility", b =>
                {
                    b.HasOne("App_Data.Models.DepartmentFacility", "IdDepartmentFacilityNavigation")
                        .WithMany("MajorFacilities")
                        .HasForeignKey("IdDepartmentFacility")
                        .HasConstraintName("FK__major_fac__id_de__440B1D61");

                    b.HasOne("App_Data.Models.Major", "IdMajorNavigation")
                        .WithMany("MajorFacilities")
                        .HasForeignKey("IdMajor")
                        .HasConstraintName("FK__major_fac__id_ma__44FF419A");

                    b.Navigation("IdDepartmentFacilityNavigation");

                    b.Navigation("IdMajorNavigation");
                });

            modelBuilder.Entity("App_Data.Models.StaffMajorFacility", b =>
                {
                    b.HasOne("App_Data.Models.MajorFacility", "IdMajorFacilityNavigation")
                        .WithMany("StaffMajorFacilities")
                        .HasForeignKey("IdMajorFacility")
                        .HasConstraintName("FK__staff_maj__id_ma__47DBAE45");

                    b.HasOne("App_Data.Models.staff", "IdStaffNavigation")
                        .WithMany("StaffMajorFacilities")
                        .HasForeignKey("IdStaff")
                        .HasConstraintName("FK__staff_maj__id_st__48CFD27E");

                    b.Navigation("IdMajorFacilityNavigation");

                    b.Navigation("IdStaffNavigation");
                });

            modelBuilder.Entity("App_Data.Models.Department", b =>
                {
                    b.Navigation("DepartmentFacilities");
                });

            modelBuilder.Entity("App_Data.Models.DepartmentFacility", b =>
                {
                    b.Navigation("MajorFacilities");
                });

            modelBuilder.Entity("App_Data.Models.Facility", b =>
                {
                    b.Navigation("DepartmentFacilities");
                });

            modelBuilder.Entity("App_Data.Models.Major", b =>
                {
                    b.Navigation("MajorFacilities");
                });

            modelBuilder.Entity("App_Data.Models.MajorFacility", b =>
                {
                    b.Navigation("StaffMajorFacilities");
                });

            modelBuilder.Entity("App_Data.Models.staff", b =>
                {
                    b.Navigation("DepartmentFacilities");

                    b.Navigation("StaffMajorFacilities");
                });
#pragma warning restore 612, 618
        }
    }
}
